version: '3'

services:
  whoami:
    image: emilevauge/whoami
    labels:
      - traefik.frontend.rule=Path:/whoami
      - traefik.enable=true
      - traefik.tags=${TRAEFIK_TAG}

  loadbalancer:
    image: traefik
    command: --docker \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=INFO \
      --accessLog \
      --web
    ports:
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  reverse-proxy:
    build:
        ./backend/nginx
    volumes:
      - site-data:/var/www/car_notifier/html
    networks:
      - server
    depends_on:
      - frontend
      - api
    ports:
        # FIXME: Right now this serves the requests directly and not traefik
      - 80:80
    labels:
      - traefik.frontend.rule=Host:localhost
      - traefik.enable=true
      - traefik.tags=${TRAEFIK_TAG}

  frontend:
    build:
      ./frontend
    volumes:
      - site-data:/app/site-data

  api:
    build:
      ./backend
    volumes:
      - ./migrations:/var/app/migrations
    environment:
      - DATABASE_URL=postgresql://testusr:password@postgres:5432/testdb
    depends_on:
      - postgres
    networks:
     - server
     - db_nw
    ports:
     - 5000:5000
    labels:
     - traefik.frontend.rule=PathPrefixStrip:/api
     - traefik.enable=true
     - traefik.tags=${TRAEFIK_TAG}

  postgres:
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - db_nw

networks:
  db_nw:
    driver: bridge
  server:
    driver: bridge

volumes:
  site-data:
